name: Distribution App

on:
#  push:
#    branches:
#     - master
#     - develop
#    paths-ignore:
#     - '**.md'
#     - '.idea/**'
#     - '.github/**'
#     - 'config/**'
  workflow_dispatch:
  
env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  KEYSTORE_FILE: ${{ secrets.KEYSTORE_FILE }}
  KEYSTORE_KEY_ALIAS: ${{ secrets.KEYSTORE_KEY_ALIAS }}
  KEYSTORE_KEY_PASSWORD: ${{ secrets.KEYSTORE_KEY_PASSWORD }}
  KEYSTORE_STORE_PASSWORD: ${{ secrets.KEYSTORE_STORE_PASSWORD }}
  TMDB_API_KEY: ${{ secrets.TMDB_API_KEY }}
  
concurrency:
  group: environment-${{ github.ref }}
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: 21
          
      - name: Make Gradlew Executable
        run: chmod +x ./gradlew
          
      - name: Decode Keystore File
        id: decode_keystore_file
        uses: timheuer/base64-to-file@v1
        with:
          fileName: 'keystore_release.jks'
          encodedString: ${{ secrets.KEYSTORE_FILE }}
          
      - name: Set Decoded File Location as Environment
        run: echo "KEYSTORE_FILE=${{ steps.decode_keystore_file.outputs.filePath }}" >> $GITHUB_ENV
          
      - name: Build GmsDebug Artifact
        run: ./gradlew androidApp:assembleGmsDebug

      - name: Build HmsDebug Artifact
        run: ./gradlew androidApp:assembleHmsDebug

      - name: Build FossDebug Artifact
        run: ./gradlew androidApp:assembleFossDebug
          
      - name: Build GmsRelease Artifact
        run: ./gradlew androidApp:assembleGmsRelease

      - name: Build HmsRelease Artifact
        run: ./gradlew androidApp:assembleHmsRelease

      - name: Build FossRelease Artifact
        run: ./gradlew androidApp:assembleFossRelease
        
#      - name: Build GmsBundle Artifact
#        run: ./gradlew androidApp:bundleGmsRelease
 
#      - name: Upload Artifacts to Outputs
#        uses: actions/upload-artifact@v2
#        with:
#          path: |
#            androidApp/build/outputs/apk
#            androidApp/build/outputs/bundle
          
#      - name: Distribute Artifacts via Firebase
#        run: ./gradlew appDistributionUploadRelease
#        env:
#          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}

#      - name: Create Service Account JSON File
#        run: echo '${{ secrets.GOOGLE_PLAY_SERVICE_ACCOUNT_JSON }}' > service_account.json
        
#      - name: Upload Bundle to Google Play Console
#        uses: sokchanbo/android-upload-google-play@v1.0.0
#        with:
#          service-account: service_account.json
#          package-name: org.michaelbel.template
#          release-file: app/build/outputs/bundle/**/*.aab
#          track: internal

      - name: Telegram Message
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          disable_notification: false
          disable_web_page_preview: true
          document: androidApp/build/outputs/apk/**/**/*.apk
          message_file: ./releaseNotes.txt